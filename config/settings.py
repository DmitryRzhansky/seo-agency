"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from django.templatetags.static import static
from django.urls import reverse_lazy

load_dotenv() 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fx42c0a1u&j=3rch=p$#5yk5#ud=t0d9ygimm7=a=r$c%i7_2c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'unfold',  # Django Unfold –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥ django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'blog',
    'services',
    'pages',
    'seo',
    'ckeditor',
    'ckeditor_uploader',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'main.middleware.GeoLocationMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'main.context_processors.services_menu',
            ],
            'builtins': [
                'main.templatetags.global_filters',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DB_ENGINE = os.getenv('DB_ENGINE', '').lower()
DB_NAME = os.getenv('DB_NAME')
DB_USER = os.getenv('DB_USER')
DB_PASSWORD = os.getenv('DB_PASSWORD')
DB_HOST = os.getenv('DB_HOST')
DB_PORT = os.getenv('DB_PORT')

# –ï—Å–ª–∏ Postgres —è–≤–Ω–æ –≤—ã–±—Ä–∞–Ω –∏ –µ—Å—Ç—å –∏–º—è –ë–î ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º Postgres, –∏–Ω–∞—á–µ SQLite
if DB_ENGINE in ('postgres', 'postgresql', 'psql') and DB_NAME:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST or 'localhost',
            'PORT': DB_PORT or '5432',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
# –ü—É—Ç—å, –∫—É–¥–∞ `collectstatic` –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –≤—Å–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (User-uploaded content)
# URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
MEDIA_URL = '/media/'
# –ü—É—Ç—å –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ, –≥–¥–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
MEDIA_ROOT = BASE_DIR / 'media'

# CKEditor settings
# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
CKEDITOR_UPLOAD_PATH = 'uploads/'
# –£–±–∏—Ä–∞–µ—Ç –Ω–∞–¥–ø–∏—Å—å "CKEditor 4" –≤–Ω–∏–∑—É —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
CKEDITOR_FORCE_JPEG_COMPRESSION = True
CKEDITOR_IMAGE_QUALITY = 75

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ CKEditor
CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono-lisa',
        'toolbar': 'full',
        'height': 300,
        'width': '100%',
        'toolbar_Full': [
            ['Styles', 'Format', 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ],
            ['Image', 'Flash', 'Table', 'HorizontalRule'],
            ['TextColor', 'BGColor'],
            ['Smiley', 'SpecialChar'],
            ['Link', 'Unlink', 'Anchor'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl', 'Language'],
            ['Source', '-', 'Maximize'],
        ],
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
# IPAPI_KEY = 'your_api_key_here'  # –ü–æ–ª—É—á–∏—Ç—å –Ω–∞ https://ipapi.co/api/
# –ë–µ–∑ –∫–ª—é—á–∞: 1000 –∑–∞–ø—Ä–æ—Å–æ–≤/–¥–µ–Ω—å, —Ç–æ–ª—å–∫–æ HTTP
# –° –∫–ª—é—á–æ–º: –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤, HTTPS, –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django Unfold
UNFOLD = {
    "SITE_TITLE": "Isakov Agency - –ø—É—Ç–Ω–∏–∫, —Ç—ã –Ω–∞—à–µ–ª —Å–≤–æ–µ –º–µ—Å—Ç–æ...",
    "SITE_HEADER": "–ü—É—Ç–Ω–∏–∫, —Ç—ã –Ω–∞—à–µ–ª —Å–≤–æ–µ –º–µ—Å—Ç–æ...",
    "SITE_SYMBOL": "üëπ",
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "Isakov Agency Development",
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,
        "navigation": [
            {
                "title": "üèôÔ∏è –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–µ SEO",
                "separator": True,
                "items": [
                    {
                        "title": "–ì–æ—Ä–æ–¥–∞",
                        "icon": "location_city",
                        "link": lambda request: reverse_lazy("admin:main_city_changelist"),
                    },
                ],
            },
            {
                "title": "üíº –£—Å–ª—É–≥–∏",
                "separator": True,
                "items": [
                    {
                        "title": "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥",
                        "icon": "folder",
                        "link": lambda request: reverse_lazy("admin:main_servicecategory_changelist"),
                    },
                    {
                        "title": "–£—Å–ª—É–≥–∏",
                        "icon": "business",
                        "link": lambda request: reverse_lazy("admin:main_service_changelist"),
                    },
                ],
            },
            {
                "title": "üìù –ö–æ–Ω—Ç–µ–Ω—Ç",
                "separator": True,
                "items": [
                    {
                        "title": "–ë–ª–æ–≥",
                        "icon": "article",
                        "link": lambda request: reverse_lazy("admin:main_post_changelist"),
                    },
                    {
                        "title": "–ö–æ–º–∞–Ω–¥–∞",
                        "icon": "people",
                        "link": lambda request: reverse_lazy("admin:main_teammember_changelist"),
                    },
                    {
                        "title": "–û—Ç–∑—ã–≤—ã",
                        "icon": "star",
                        "link": lambda request: reverse_lazy("admin:main_testimonial_changelist"),
                    },
                ],
            },
        ],
    },
}