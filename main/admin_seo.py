# main/admin_seo.py - –£–ª—É—á—à–µ–Ω–Ω—ã–µ –∞–¥–º–∏–Ω-–∫–ª–∞—Å—Å—ã –¥–ª—è SEO

from django.contrib import admin
from django.utils.html import format_html
from django.urls import reverse
from django.utils.safestring import mark_safe
from .models import City, ServiceCategory, Service, Post, TeamMember, Testimonial, ContactRequest, PortfolioItem
from seo.admin import SEOAdminMixin

class SEOPreviewMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ SEO —Å–Ω–∏–ø–ø–µ—Ç–∞"""
    
    def seo_preview(self, obj):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–Ω–∏–ø–ø–µ—Ç –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ"""
        title = obj.get_seo_title() or obj.title or "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"
        description = obj.get_seo_description() or "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        if len(title) > 60:
            title = title[:57] + "..."
        if len(description) > 160:
            description = description[:157] + "..."
            
        return format_html(
            '<div style="border: 1px solid #ddd; padding: 10px; margin: 5px 0; background: #f9f9f9;">'
            '<div style="color: #1a0dab; font-size: 16px; line-height: 1.3; margin-bottom: 3px;">{}</div>'
            '<div style="color: #006621; font-size: 14px; line-height: 1.3; margin-bottom: 3px;">{}</div>'
            '<div style="color: #545454; font-size: 13px; line-height: 1.4;">{}</div>'
            '</div>',
            title,
            obj.get_absolute_url() if hasattr(obj, 'get_absolute_url') else "#",
            description
        )
    seo_preview.short_description = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤ –ø–æ–∏—Å–∫–µ"

class SEOValidationMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ SEO –ø–æ–ª–µ–π"""
    
    def get_queryset(self, request):
        return super().get_queryset(request)
    
    def seo_validation(self, obj):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö SEO –ø–æ–ª—è—Ö"""
        warnings = []
        
        if not obj.get_seo_title():
            warnings.append("‚ùå –ù–µ—Ç SEO –∑–∞–≥–æ–ª–æ–≤–∫–∞")
        if not obj.get_seo_description():
            warnings.append("‚ùå –ù–µ—Ç SEO –æ–ø–∏—Å–∞–Ω–∏—è")
            
        if warnings:
            return format_html(
                '<div style="color: #d73502; font-size: 12px;">{}</div>',
                "<br>".join(warnings)
            )
        else:
            return format_html('<div style="color: #0f5132;">‚úÖ SEO –≥–æ—Ç–æ–≤–æ</div>')
    seo_validation.short_description = "SEO —Å—Ç–∞—Ç—É—Å"

@admin.register(City)
class CityAdmin(SEOAdminMixin, SEOPreviewMixin, SEOValidationMixin, admin.ModelAdmin):
    list_display = (
        'name', 'region', 'population', 'order', 'is_active', 
        'seo_validation', 'seo_title_length', 'seo_description_length'
    )
    list_filter = ('is_active', 'region', 'population')
    search_fields = ('name', 'region', 'local_title', 'local_description')
    prepopulated_fields = {'slug': ('name',)}
    list_editable = ('order', 'is_active')
    
    fieldsets = (
        ('üèôÔ∏è –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'slug', 'region', 'population', 'order', 'is_active'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ä–æ–¥–µ'
        }),
        ('üéØ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–µ SEO', {
            'fields': ('local_title', 'local_description'),
            'description': '–õ–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ SEO'
        }),
        ('üçû –ù–∞–≤–∏–≥–∞—Ü–∏—è', {
            'fields': ('show_breadcrumbs', 'custom_breadcrumbs'),
            'classes': ('collapse',),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫'
        }),
    )
    
    def get_readonly_fields(self, request, obj=None):
        readonly = list(super().get_readonly_fields(request, obj))
        if obj:
            readonly.extend(['seo_preview'])
        return readonly

@admin.register(ServiceCategory)
class ServiceCategoryAdmin(SEOAdminMixin, SEOPreviewMixin, SEOValidationMixin, admin.ModelAdmin):
    list_display = (
        'title', 'order', 'slug', 'get_service_count', 
        'seo_validation', 'seo_title_length', 'seo_description_length'
    )
    prepopulated_fields = {'slug': ('title',)}
    
    fieldsets = (
        ('üìÇ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'slug', 'order'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥'
        }),
        ('üçû –ù–∞–≤–∏–≥–∞—Ü–∏—è', {
            'fields': ('show_breadcrumbs', 'custom_breadcrumbs'),
            'classes': ('collapse',),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫'
        }),
    )

    def get_service_count(self, obj):
        count = obj.services.count()
        if count > 0:
            url = reverse('admin:main_service_changelist') + f'?category__id__exact={obj.id}'
            return format_html('<a href="{}">{} —É—Å–ª—É–≥</a>', url, count)
        return "0 —É—Å–ª—É–≥"
    get_service_count.short_description = '–£—Å–ª—É–≥–∏'

@admin.register(Service)
class ServiceAdmin(SEOAdminMixin, SEOPreviewMixin, SEOValidationMixin, admin.ModelAdmin):
    list_display = (
        'title', 'category', 'order', 'slug', 'is_published', 
        'seo_validation', 'seo_title_length', 'seo_description_length'
    )
    list_filter = ('category', 'is_published')
    search_fields = ('title', 'short_description', 'content')
    prepopulated_fields = {'slug': ('title',)}
    list_editable = ('order', 'is_published')
    
    fieldsets = (
        ('üíº –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('category', 'title', 'slug', 'order', 'is_published', 'short_description'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ª—É–≥–µ'
        }),
        ('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', {
            'fields': ('image', 'image_alt'),
            'description': '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ª—É–≥–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ'
        }),
        ('üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ', {
            'fields': ('content',),
            'description': '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏'
        }),
        ('üçû –ù–∞–≤–∏–≥–∞—Ü–∏—è', {
            'fields': ('show_breadcrumbs', 'custom_breadcrumbs'),
            'classes': ('collapse',),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫'
        }),
    )

@admin.register(Post)
class PostAdmin(SEOAdminMixin, SEOPreviewMixin, SEOValidationMixin, admin.ModelAdmin):
    list_display = (
        'title', 'category', 'published_date', 'is_published', 'views_count', 
        'seo_validation', 'seo_title_length', 'seo_description_length'
    )
    list_filter = ('is_published', 'published_date', 'category', 'author')
    search_fields = ('title', 'content')
    prepopulated_fields = {'slug': ('title',)}
    date_hierarchy = 'published_date'
    readonly_fields = ('views_count', 'seo_preview')
    
    fieldsets = (
        ('üìù –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('title', 'slug', 'category', 'author', 'is_published'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—å–µ'
        }),
        ('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ', {
            'fields': ('content', 'image', 'image_alt'),
            'description': '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
        }),
        ('üçû –ù–∞–≤–∏–≥–∞—Ü–∏—è', {
            'fields': ('show_breadcrumbs', 'custom_breadcrumbs'),
            'classes': ('collapse',),
            'description': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫'
        }),
        ('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', {
            'fields': ('views_count',),
            'classes': ('collapse',),
            'description': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤'
        }),
        ('üëÅÔ∏è SEO –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä', {
            'fields': ('seo_preview',),
            'classes': ('collapse',),
            'description': '–ö–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤ –ø–æ–∏—Å–∫–æ–≤–æ–π –≤—ã–¥–∞—á–µ'
        }),
    )

@admin.register(TeamMember)
class TeamMemberAdmin(admin.ModelAdmin):
    list_display = ('name', 'role', 'order', 'is_active', 'photo_preview')
    list_editable = ('order', 'is_active')
    search_fields = ('name', 'role', 'bio')
    list_filter = ('is_active',)
    readonly_fields = ('photo_preview',)
    
    fieldsets = (
        ('üë§ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'role', 'bio', 'order', 'is_active'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—á–∞—Å—Ç–Ω–∏–∫–µ –∫–æ–º–∞–Ω–¥—ã'
        }),
        ('üì∏ –§–æ—Ç–æ', {
            'fields': ('photo', 'photo_alt', 'photo_preview'),
            'description': '–§–æ—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è SEO'
        }),
    )
    
    def photo_preview(self, obj):
        if obj.photo:
            return format_html(
                '<img src="{}" style="max-height: 50px; max-width: 50px; border-radius: 50%;" />',
                obj.photo.url
            )
        return "–ù–µ—Ç —Ñ–æ—Ç–æ"
    photo_preview.short_description = "–§–æ—Ç–æ"

@admin.register(Testimonial)
class TestimonialAdmin(admin.ModelAdmin):
    list_display = ('author_name', 'author_title', 'order', 'rating', 'is_active', 'photo_preview')
    list_editable = ('order', 'rating', 'is_active')
    search_fields = ('author_name', 'author_title', 'content')
    list_filter = ('is_active', 'rating')
    readonly_fields = ('photo_preview',)
    
    fieldsets = (
        ('‚≠ê –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('author_name', 'author_title', 'content', 'rating', 'order', 'is_active'),
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–∑—ã–≤–µ'
        }),
        ('üì∏ –ê–≤–∞—Ç–∞—Ä', {
            'fields': ('photo', 'photo_alt', 'photo_preview'),
            'description': '–ê–≤–∞—Ç–∞—Ä –∞–≤—Ç–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è SEO'
        }),
    )
    
    def photo_preview(self, obj):
        if obj.photo:
            return format_html(
                '<img src="{}" style="max-height: 50px; max-width: 50px; border-radius: 50%;" />',
                obj.photo.url
            )
        return "–ù–µ—Ç —Ñ–æ—Ç–æ"
    photo_preview.short_description = "–ê–≤–∞—Ç–∞—Ä"

@admin.register(ContactRequest)
class ContactRequestAdmin(admin.ModelAdmin):
    list_display = ('name', 'phone', 'email', 'created_at', 'has_message')
    list_filter = ('created_at',)
    search_fields = ('name', 'phone', 'email', 'message')
    readonly_fields = ('created_at',)
    date_hierarchy = 'created_at'
    
    fieldsets = (
        ('üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': ('name', 'phone', 'email'),
            'description': '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞'
        }),
        ('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ', {
            'fields': ('message',),
            'description': '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞'
        }),
        ('üìÖ –í—Ä–µ–º—è', {
            'fields': ('created_at',),
            'classes': ('collapse',),
            'description': '–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏'
        }),
    )
    
    def has_message(self, obj):
        return "‚úÖ" if obj.message else "‚ùå"
    has_message.short_description = "–ï—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"


@admin.register(PortfolioItem)
class PortfolioItemAdmin(SEOAdminMixin, SEOPreviewMixin, SEOValidationMixin, admin.ModelAdmin):
    """–ê–¥–º–∏–Ω–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    
    list_display = [
        'title', 'client_name', 'project_type', 'is_published', 
        'is_featured', 'order', 'created_at', 'seo_preview'
    ]
    list_filter = [
        'is_published', 'is_featured', 'project_type', 'created_at'
    ]
    search_fields = ['title', 'client_name', 'short_description']
    list_editable = ['is_published', 'is_featured', 'order']
    readonly_fields = ['created_at', 'updated_at', 'seo_preview', 'seo_validation']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', {
            'fields': (
                'title', 'slug', 'client_name', 'project_type',
                'short_description', 'full_description'
            )
        }),
        ('–ü–µ—Ä–∏–æ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞', {
            'fields': (
                'cooperation_start', 'cooperation_end'
            ),
            'description': '–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ'
        }),
        ('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': (
                'main_image', 'main_image_alt', 'gallery_images'
            ),
            'description': '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏'
        }),
        ('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', {
            'fields': ('results', 'technologies'),
            'description': '–î–æ–±–∞–≤—å—Ç–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'
        }),
        ('–°—Å—ã–ª–∫–∏', {
            'fields': ('project_url',),
            'description': '–°—Å—ã–ª–∫–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Å–∞–π—Ç'
        }),
        ('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è', {
            'fields': (
                'is_published', 'is_featured', 'order',
                'show_breadcrumbs', 'custom_breadcrumbs'
            )
        }),
        ('SEO –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', {
            'fields': (
                'seo_title', 'seo_description', 'seo_canonical',
                'seo_preview', 'seo_validation'
            ),
            'classes': ('collapse',)
        }),
        ('–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ', {
            'fields': ('created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )
    
    def get_queryset(self, request):
        return super().get_queryset(request).select_related()
    
    def save_model(self, request, obj, form, change):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ SEO –ø–æ–ª–µ–π –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not obj.seo_title:
            obj.seo_title = f"{obj.title} - –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ | Isakov Agency"
        if not obj.seo_description:
            obj.seo_description = obj.short_description[:160] if obj.short_description else f"–ü—Ä–æ–µ–∫—Ç {obj.title} –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ Isakov Agency"
            
        super().save_model(request, obj, form, change)
    
