from django.core.management.base import BaseCommand
from seo_management.models import SitemapSettings, RobotsTxtSettings


class Command(BaseCommand):
    help = '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SEO (sitemap –∏ robots.txt)'

    def handle(self, *args, **options):
        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ sitemap, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        sitemap_settings, created = SitemapSettings.objects.get_or_create(
            pk=1,
            defaults={
                'is_enabled': True,
                'changefreq': 'weekly',
                'priority': 0.5,
                'include_blog_posts': True,
                'include_services': True,
                'include_cities': True,
                'include_pages': True,
            }
        )
        
        if created:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ sitemap —Å–æ–∑–¥–∞–Ω—ã')
            )
        else:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ sitemap —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
            )

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ robots.txt, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        robots_settings, created = RobotsTxtSettings.objects.get_or_create(
            pk=1,
            defaults={
                'content': """User-agent: *
Allow: /

Sitemap: {sitemap_url}"""
            }
        )
        
        if created:
            self.stdout.write(
                self.style.SUCCESS('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ robots.txt —Å–æ–∑–¥–∞–Ω—ã')
            )
        else:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ robots.txt —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
            )

        self.stdout.write(
            self.style.SUCCESS('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SEO –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
        )
